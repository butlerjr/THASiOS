/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2015 Google Inc.
 */

//
//  GTLQuerySculptures.h
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   sculptures/v1
// Description:
//   Sculpture API
// Classes:
//   GTLQuerySculptures (9 custom class methods, 5 custom properties)

#if GTL_BUILT_AS_FRAMEWORK
  #import "GTL/GTLQuery.h"
#else
  #import "GTLQuery.h"
#endif

@class GTLSculpturesArtist;
@class GTLSculpturesComment;
@class GTLSculpturesSculpture;

@interface GTLQuerySculptures : GTLQuery

//
// Parameters valid on all methods.
//

// Selector specifying which fields to include in a partial response.
@property (nonatomic, copy) NSString *fields;

//
// Method-specific parameters; see the comments below for more information.
//
@property (nonatomic, copy) NSString *entityKey;
@property (nonatomic, assign) long long limit;
@property (nonatomic, copy) NSString *order;
@property (nonatomic, copy) NSString *pageToken;

#pragma mark -
#pragma mark "artist" methods
// These create a GTLQuerySculptures object.

// Method: sculptures.artist.delete
//  Authorization scope(s):
//   kGTLAuthScopeSculpturesUserinfoEmail
// Fetches a GTLSculpturesArtist.
+ (instancetype)queryForArtistDeleteWithEntityKey:(NSString *)entityKey;

// Method: sculptures.artist.insert
//  Authorization scope(s):
//   kGTLAuthScopeSculpturesUserinfoEmail
// Fetches a GTLSculpturesArtist.
+ (instancetype)queryForArtistInsertWithObject:(GTLSculpturesArtist *)object;

// Method: sculptures.artist.list
//  Optional:
//   limit: long long
//   order: NSString
//   pageToken: NSString
//  Authorization scope(s):
//   kGTLAuthScopeSculpturesUserinfoEmail
// Fetches a GTLSculpturesArtistCollection.
+ (instancetype)queryForArtistList;

#pragma mark -
#pragma mark "comment" methods
// These create a GTLQuerySculptures object.

// Method: sculptures.comment.delete
//  Authorization scope(s):
//   kGTLAuthScopeSculpturesUserinfoEmail
// Fetches a GTLSculpturesComment.
+ (instancetype)queryForCommentDeleteWithEntityKey:(NSString *)entityKey;

// Method: sculptures.comment.insert
//  Authorization scope(s):
//   kGTLAuthScopeSculpturesUserinfoEmail
// Fetches a GTLSculpturesComment.
+ (instancetype)queryForCommentInsertWithObject:(GTLSculpturesComment *)object;

// Method: sculptures.comment.list
//  Optional:
//   limit: long long
//   order: NSString
//   pageToken: NSString
//  Authorization scope(s):
//   kGTLAuthScopeSculpturesUserinfoEmail
// Fetches a GTLSculpturesCommentCollection.
+ (instancetype)queryForCommentList;

#pragma mark -
#pragma mark "sculpture" methods
// These create a GTLQuerySculptures object.

// Method: sculptures.sculpture.delete
//  Authorization scope(s):
//   kGTLAuthScopeSculpturesUserinfoEmail
// Fetches a GTLSculpturesSculpture.
+ (instancetype)queryForSculptureDeleteWithEntityKey:(NSString *)entityKey;

// Method: sculptures.sculpture.insert
//  Authorization scope(s):
//   kGTLAuthScopeSculpturesUserinfoEmail
// Fetches a GTLSculpturesSculpture.
+ (instancetype)queryForSculptureInsertWithObject:(GTLSculpturesSculpture *)object;

// Method: sculptures.sculpture.list
//  Optional:
//   limit: long long
//   order: NSString
//   pageToken: NSString
//  Authorization scope(s):
//   kGTLAuthScopeSculpturesUserinfoEmail
// Fetches a GTLSculpturesSculptureCollection.
+ (instancetype)queryForSculptureList;

@end
